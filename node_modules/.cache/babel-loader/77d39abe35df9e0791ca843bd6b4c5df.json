{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/CitySearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CitySearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = () => {\n      const url = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.state.city, \"&units=\").concat(this.state.units, \"&APPID=d5566182730361aa1c00849d2f86bb95\");\n      axios.get(url).then(response => {\n        console.log(url);\n        this.setState({\n          city: response.data.name,\n          temperature: response.data.main.temp,\n          description: response.data.weather[0].main\n        });\n        this.props.onSearchComplete(this.state.city, this.state.temperature, this.state.units, this.state.symbol, this.state.description, undefined);\n      }).catch(error => {\n        if (error.response) {\n          console.log(error.response.data);\n          this.setState({\n            error: error.response.data.message\n          });\n          this.props.onSearchComplete(undefined, undefined, undefined, undefined, this.state.description, this.state.error);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          console.log(error.request);\n          this.setState({\n            error: error.request\n          });\n          this.props.onSearchComplete(undefined, undefined, undefined, undefined, this.state.description, this.state.error);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log('Error', error.message);\n          this.setState({\n            error: error.message\n          });\n          this.props.onSearchComplete(undefined, undefined, undefined, undefined, this.state.description, this.state.error);\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.callAPI();\n    };\n\n    this.handleUnitChange = e => {\n      this.setState({\n        units: e.target.value\n      });\n    };\n\n    this.state = {\n      city: '',\n      temperature: '',\n      value: '',\n      units: 'metric',\n      symbol: 'C',\n      error: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUnitChange = this.handleUnitChange.bind(this);\n    this.callAPI = this.callAPI.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      city: this.props.city\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Enter city:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"city\",\n      name: \"city\",\n      city: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onChange: this.handleUnitChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"metric\",\n      id: \"celcius\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"imperial\",\n      id: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"SUBMIT\"));\n  }\n\n}\n\nexport default CitySearch;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/CitySearch.js"],"names":["React","Component","axios","CitySearch","constructor","props","callAPI","url","state","city","units","get","then","response","console","log","setState","data","name","temperature","main","temp","description","weather","onSearchComplete","symbol","undefined","catch","error","message","status","headers","request","handleSubmit","e","preventDefault","handleUnitChange","target","value","handleChange","bind","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAE/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkBlBC,OAlBkB,GAkBR,MAAM;AACZ,YAAMC,GAAG,+DAAwD,KAAKC,KAAL,CAAWC,IAAnE,oBAAiF,KAAKD,KAAL,CAAWE,KAA5F,4CAAT;AACAR,MAAAA,KAAK,CAACS,GAAN,CAAUJ,GAAV,EAEKK,IAFL,CAEWC,QAAD,IAAc;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,aAAKS,QAAL,CAAc;AACVP,UAAAA,IAAI,EAAEI,QAAQ,CAACI,IAAT,CAAcC,IADV;AAEVC,UAAAA,WAAW,EAAEN,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC,IAFtB;AAGVC,UAAAA,WAAW,EAAET,QAAQ,CAACI,IAAT,CAAcM,OAAd,CAAsB,CAAtB,EAAyBH;AAH5B,SAAd;AAKA,aAAKf,KAAL,CAAWmB,gBAAX,CAA4B,KAAKhB,KAAL,CAAWC,IAAvC,EAA6C,KAAKD,KAAL,CAAWW,WAAxD,EAAqE,KAAKX,KAAL,CAAWE,KAAhF,EAAuF,KAAKF,KAAL,CAAWiB,MAAlG,EAA0G,KAAKjB,KAAL,CAAWc,WAArH,EAAkII,SAAlI;AACH,OAVL,EAWKC,KAXL,CAWYC,KAAD,IAAW;AACd,YAAIA,KAAK,CAACf,QAAV,EAAoB;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACf,QAAN,CAAeI,IAA3B;AACA,eAAKD,QAAL,CAAc;AACVY,YAAAA,KAAK,EAAEA,KAAK,CAACf,QAAN,CAAeI,IAAf,CAAoBY;AADjB,WAAd;AAGA,eAAKxB,KAAL,CAAWmB,gBAAX,CAA4BE,SAA5B,EAAuCA,SAAvC,EAAkDA,SAAlD,EAA6DA,SAA7D,EAAwE,KAAKlB,KAAL,CAAWc,WAAnF,EAAgG,KAAKd,KAAL,CAAWoB,KAA3G;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACf,QAAN,CAAeiB,MAA3B;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACf,QAAN,CAAekB,OAA3B;AACH,SARD,MAQO,IAAIH,KAAK,CAACI,OAAV,EAAmB;AACtB;;;;;AAKAlB,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACI,OAAlB;AAEA,eAAKhB,QAAL,CAAc;AACVY,YAAAA,KAAK,EAAEA,KAAK,CAACI;AADH,WAAd;AAGA,eAAK3B,KAAL,CAAWmB,gBAAX,CAA4BE,SAA5B,EAAuCA,SAAvC,EAAkDA,SAAlD,EAA6DA,SAA7D,EAAwE,KAAKlB,KAAL,CAAWc,WAAnF,EAAgG,KAAKd,KAAL,CAAWoB,KAA3G;AACH,SAZM,MAYA;AACH;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBa,KAAK,CAACC,OAA3B;AACA,eAAKb,QAAL,CAAc;AACVY,YAAAA,KAAK,EAAEA,KAAK,CAACC;AADH,WAAd;AAGA,eAAKxB,KAAL,CAAWmB,gBAAX,CAA4BE,SAA5B,EAAuCA,SAAvC,EAAkDA,SAAlD,EAA6DA,SAA7D,EAAwE,KAAKlB,KAAL,CAAWc,WAAnF,EAAgG,KAAKd,KAAL,CAAWoB,KAA3G;AACH;AACJ,OAxCL;AAyCC,KA7Da;;AAAA,SA2ElBK,YA3EkB,GA2EFC,CAAD,IAAQ;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAK7B,OAAL;AACH,KA9EiB;;AAAA,SAgFlB8B,gBAhFkB,GAgFEF,CAAD,IAAO;AACtB,WAAKlB,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAEwB,CAAC,CAACG,MAAF,CAASC;AADN,OAAd;AAGH,KApFiB;;AAGd,SAAK9B,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETU,MAAAA,WAAW,EAAE,EAFJ;AAGTmB,MAAAA,KAAK,EAAE,EAHE;AAIT5B,MAAAA,KAAK,EAAE,QAJE;AAKTe,MAAAA,MAAM,EAAE,GALC;AAMTG,MAAAA,KAAK,EAAE;AANE,KAAb;AASA,SAAKW,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKP,YAAL,GAAoB,KAAKA,YAAL,CAAkBO,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKJ,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBI,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKlC,OAAL,GAAe,KAAKA,OAAL,CAAakC,IAAb,CAAkB,IAAlB,CAAf;AACH;;AA+CDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKzB,QAAL,CAAc;AACVP,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI;AADP,KAAd;AAGH;;AAED8B,EAAAA,YAAY,CAACL,CAAD,EAAI;AACZ,SAAKlB,QAAL,CAAc;AACZP,MAAAA,IAAI,EAAEyB,CAAC,CAACG,MAAF,CAASC;AADH,KAAd;AAGH;;AAaDI,EAAAA,MAAM,GAAI;AACN,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAmC,MAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAC,MADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWC,IAJrB;AAKI,MAAA,QAAQ,EAAE,KAAK8B,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAYI;AAAK,MAAA,QAAQ,EAAE,KAAKH,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAC,QAHV;AAII,MAAA,EAAE,EAAC,SAJP;AAKI,MAAA,cAAc,MALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AACI,MAAA,OAAO,EAAC,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ,EAWI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,EAAE,EAAC,YAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAiBI;AACI,MAAA,OAAO,EAAC,YADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ,CAZJ,EAkCI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCJ,CADJ;AAsCH;;AA/H8B;;AAkInC,eAAejC,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass CitySearch extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            city: '',            \n            temperature: '',\n            value: '',\n            units: 'metric',\n            symbol: 'C',\n            error: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUnitChange = this.handleUnitChange.bind(this);\n        this.callAPI = this.callAPI.bind(this);\n    }\n\n    callAPI = () => {\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=${this.state.units}&APPID=d5566182730361aa1c00849d2f86bb95`;     \n        axios.get(url)\n            \n            .then((response) => {\n                console.log(url)\n                this.setState({ \n                    city: response.data.name,\n                    temperature: response.data.main.temp,\n                    description: response.data.weather[0].main,\n                });            \n                this.props.onSearchComplete(this.state.city, this.state.temperature, this.state.units, this.state.symbol, this.state.description, undefined);\n            })\n            .catch((error) => { \n                if (error.response) {\n                    console.log(error.response.data);\n                    this.setState({\n                        error: error.response.data.message\n                    });\n                    this.props.onSearchComplete(undefined, undefined, undefined, undefined, this.state.description, this.state.error);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                } else if (error.request) {\n                    /*\n                     * The request was made but no response was received, `error.request`\n                     * is an instance of XMLHttpRequest in the browser and an instance\n                     * of http.ClientRequest in Node.js\n                     */\n                    console.log(error.request);\n\n                    this.setState({\n                        error: error.request\n                    });\n                    this.props.onSearchComplete(undefined, undefined, undefined, undefined, this.state.description, this.state.error);\n                } else {\n                    // Something happened in setting up the request and triggered an Error\n                    console.log('Error', error.message);\n                    this.setState({\n                        error: error.message\n                    });\n                    this.props.onSearchComplete(undefined, undefined, undefined, undefined, this.state.description, this.state.error);\n                }\n            })\n        }\n\n    componentDidMount() {\n        this.setState({\n            city: this.props.city\n        });\n    }\n    \n    handleChange(e) {\n        this.setState({ \n          city: e.target.value\n        });\n    }\n\n    handleSubmit = (e) =>  {\n        e.preventDefault();\n        this.callAPI();\n    }\n\n    handleUnitChange = (e) => {\n        this.setState({\n            units: e.target.value\n        })\n    }\n\n    render () {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form\">\n                <label \n                    htmlFor=\"city\">Enter city: \n                </label>\n                <br />\n                <input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"city\"                    \n                    city={this.state.city}\n                    onChange={this.handleChange}\n                />\n                <div onChange={this.handleUnitChange}>\n                    <input \n                        type=\"radio\" \n                        name=\"units\" \n                        value=\"metric\" \n                        id=\"celcius\"  \n                        defaultChecked\n                    />\n                    <label \n                        htmlFor=\"celcius\">Celcius\n                    </label>\n                    <input \n                        type=\"radio\" \n                        name=\"units\" \n                        value=\"imperial\" \n                        id=\"fahrenheit\" \n                    />\n                    <label \n                        htmlFor=\"fahrenheit\">Fahrenheit\n                    </label>\n                </div>\n                \n                <button type=\"submit\">SUBMIT</button>\n            </form>\n        )\n    }\n}\n\nexport default CitySearch;"]},"metadata":{},"sourceType":"module"}