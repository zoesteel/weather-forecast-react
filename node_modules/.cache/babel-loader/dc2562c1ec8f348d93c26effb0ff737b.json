{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/CitySearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CitySearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = () => {\n      const url = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.state.city, \"&units=\").concat(this.state.units, \"&APPID=d5566182730361aa1c00849d2f86bb95\");\n      axios.get(url).then(response => {\n        this.setState({\n          temperature: response.data.main.temp\n        });\n        this.props.onSearchComplete(this.state.city, this.state.temperature, this.state.units);\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          message: 'No city found'\n        });\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.callAPI();\n    };\n\n    this.state = {\n      city: '',\n      temperature: '',\n      units: 'metric'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.callAPI = this.callAPI.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      city: this.props.city\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Enter city:\"), React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"celcius\",\n      id: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"fahrenheit\",\n      id: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default CitySearch;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/CitySearch.js"],"names":["React","Component","axios","CitySearch","constructor","props","callAPI","url","state","city","units","get","then","response","setState","temperature","data","main","temp","onSearchComplete","catch","error","console","log","message","handleSubmit","e","preventDefault","handleChange","bind","componentDidMount","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass CitySearch extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            city: '',            \n            temperature: '',\n            units: 'metric',\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.callAPI = this.callAPI.bind(this);\n    }\n\n    callAPI = () => {\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=${this.state.units}&APPID=d5566182730361aa1c00849d2f86bb95`;     \n        axios.get(url)\n            .then((response) => {\n                this.setState({ \n                    temperature: response.data.main.temp \n                });            \n                this.props.onSearchComplete(this.state.city, this.state.temperature, this.state.units);\n            })\n            .catch((error) => { \n                console.log(error);\n                this.setState({\n                    message: 'No city found'\n                })\n            })\n    }\n\n    componentDidMount() {\n        this.setState({\n            city: this.props.city\n        });\n    }\n    \n    handleChange(e) {\n        this.setState({ \n          city: e.target.value \n        });\n    }\n\n    handleSubmit = (e) =>  {\n        e.preventDefault();\n        this.callAPI();\n    }\n\n    render () {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label \n                    htmlFor=\"name\">Enter city: \n                </label>\n                <input\n                    id=\"city\"\n                    type=\"text\"\n                    value={this.state.city}\n                    onChange={this.handleChange}\n                />\n                <div>\n                <input \n                    type=\"radio\" \n                    name=\"units\" \n                    value=\"celcius\" \n                    id=\"celcius\"  \n                />\n                <label \n                    htmlFor=\"celcius\">Celcius\n                </label>\n                <input \n                    type=\"radio\" \n                    name=\"units\" \n                    value=\"fahrenheit\" \n                    id=\"fahrenheit\" \n                />\n                <label \n                    htmlFor=\"fahrenheit\">Fahrenheit\n                </label>\n                </div>\n                \n                <button type=\"submit\">Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default CitySearch;"]},"metadata":{},"sourceType":"module"}