{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/api/city');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // fetch(`/api/city?city=${encodeURIComponent(this.state.city)}`)\n      //   .then(response => response.json())\n      //   .then(state => this.setState(state));\n\n      const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=london&appid=d5566182730361aa1c00849d2f86bb95', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.weather\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n\n    this.state = {\n      city: '',\n      weather: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  handleChange(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Enter city: \"), React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.weather)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/src/App.js"],"names":["React","Component","App","constructor","props","callApi","response","fetch","body","json","status","Error","message","handleSubmit","event","preventDefault","method","headers","JSON","stringify","post","state","weather","text","setState","responseToPost","city","handleChange","bind","componentDidMount","then","res","express","catch","err","console","log","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      weather: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/city');\n    const body = await response.json();\n    if(response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n  \n  handleChange(event) {\n    this.setState({ \n      city: event.target.value \n    });\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    // fetch(`/api/city?city=${encodeURIComponent(this.state.city)}`)\n    //   .then(response => response.json())\n    //   .then(state => this.setState(state));\n    const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=london&appid=d5566182730361aa1c00849d2f86bb95', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({post: this.state.weather})\n    });\n    \n    const body = await response.text();\n\n    this.setState({\n      responseToPost: body\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter city: </label>\n            <input\n              id=\"city\"\n              type=\"text\"\n              value={this.state.city}\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>{this.state.weather}</p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}