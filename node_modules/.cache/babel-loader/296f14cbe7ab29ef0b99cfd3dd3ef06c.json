{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n\n    this.state = {\n      city: '',\n      weather: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      responseToPost: '',\n      value: '',\n      response: '',\n      post: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  // callAPI() {\n  // //   fetch('localhost:3001/')\n  //       const city = this.state.city;\n  //       const api_key = process.env.API_KEY;\n  //       const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=d5566182730361aa1c00849d2f86bb95`\n  //       fetch(url)\n  //       .then(response => console.log(response))\n  //       .then(response => response.json()) \n  //       // .then(response => JSON.stringify(response))\n  //       .then(response => JSON.stringify(response.main.temp))\n  //       .then(response => this.setState({ temperature: response }))\n  //       .catch(err => console.log(err))\n  // }\n  // callAPI = async () => {\n  //   const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=d5566182730361aa1c00849d2f86bb95`);\n  //   const body = await response.json();\n  //   if(response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  } // handleSubmit = async event =>  {\n  //   event.preventDefault();\n  //   console.log(`${this.state.city}`);\n  //   // this.callAPI();\n  //   const response = await fetch('/', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ post: this.state.post }),\n  //   });\n  //   const body = await response.text();\n  //   this.setState({ responseToPost: body });\n  // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n  //   .then(response => response.json())\n  //   .then(state => this.setState(state));\n  // const response = await fetch('api/weather', {\n  //   method: 'POST',\n  //   headers: {\n  //     'Content-Type': 'application/json',\n  //   },\n  //   body: JSON.stringify({post: this.state.weather\n  //   });\n  //   const body = await response.text();\n  // })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Enter city: \"), React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"celcius\",\n      id: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"fahrenheit\",\n      id: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Temperature for \", this.state.city, \" is \", this.state.temperature, \"\\xB0\", this.state.symbol), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.response), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Post to Server:\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.responseToPost)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js"],"names":["React","Component","App","constructor","props","callApi","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","post","state","text","setState","responseToPost","city","weather","temperature","units","symbol","value","handleChange","bind","componentDidMount","then","res","express","catch","err","console","log","event","target","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,OAxBmB,GAwBT,YAAY;AACpB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AACD,KA9BkB;;AAAA,SAgCnBK,YAhCmB,GAgCJ,MAAMC,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACzCS,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgC;AAKzCT,QAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD;AAAnB,SAAf;AALmC,OAAf,CAA5B;AAOA,YAAMZ,IAAI,GAAG,MAAMF,QAAQ,CAACgB,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEhB;AAAlB,OAAd;AACD,KA5CkB;;AAEjB,SAAKa,KAAL,GAAa;AACXI,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,KAAK,EAAE,QAJI;AAKXC,MAAAA,MAAM,EAAE,GALG;AAMXL,MAAAA,cAAc,EAAE,EANL;AAOXM,MAAAA,KAAK,EAAE,EAPI;AAQXxB,MAAAA,QAAQ,EAAE,EARC;AASXc,MAAAA,IAAI,EAAE;AATK,KAAb;AAYA,SAAKW,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKnB,YAAL,GAAoB,KAAKA,YAAL,CAAkBmB,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAK5B,OAAL,GACG6B,IADH,CACQC,GAAG,IAAI,KAAKZ,QAAL,CAAc;AAAEjB,MAAAA,QAAQ,EAAE6B,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD;;AAwBD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEAP,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAClB,SAAKlB,QAAL,CAAc;AACZO,MAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaZ;AADR,KAAd;AAGD,GA3EyB,CA6E1B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEFa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAK9B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWI,IAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKM,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,EAAE,EAAC,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AACE,MAAA,OAAO,EAAC,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAUE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,YAHR;AAIE,MAAA,EAAE,EAAC,YAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAgBE;AACE,MAAA,OAAO,EAAC,YADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBF,CARF,EA6BE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,CADF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoB,KAAKV,KAAL,CAAWI,IAA/B,UAAyC,KAAKJ,KAAL,CAAWM,WAApD,UAAuE,KAAKN,KAAL,CAAWQ,MAAlF,CAhCF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKR,KAAL,CAAWf,QAAf,CAnCF,EAoCA;AAAM,MAAA,QAAQ,EAAE,KAAKO,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWD,IAFpB;AAGE,MAAA,QAAQ,EAAEN,CAAC,IAAI,KAAKS,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEN,CAAC,CAAC4B,MAAF,CAASZ;AAAjB,OAAd,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CApCA,EA+CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWG,cAAf,CA/CA,CADF,CADF;AAuDD;;AArKyB;;AAwK5B,eAAetB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      weather: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      responseToPost: '',\n      value: '',\n      response: '',\n      post: '',\n    \n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n\n  // callAPI() {\n  // //   fetch('localhost:3001/')\n  //       const city = this.state.city;\n  //       const api_key = process.env.API_KEY;\n  //       const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=d5566182730361aa1c00849d2f86bb95`\n  //       fetch(url)\n\n  //       .then(response => console.log(response))\n  //       .then(response => response.json()) \n        \n  //       // .then(response => JSON.stringify(response))\n  //       .then(response => JSON.stringify(response.main.temp))\n  //       .then(response => this.setState({ temperature: response }))\n  //       .catch(err => console.log(err))\n  // }\n\n  // callAPI = async () => {\n  //   const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=d5566182730361aa1c00849d2f86bb95`);\n  //   const body = await response.json();\n  //   if(response.status !== 200) throw Error(body.message);\n\n  //   return body;\n  // };\n  \n  handleChange(event) {\n    this.setState({ \n      value: event.target.value \n    });\n  }\n\n  // handleSubmit = async event =>  {\n  //   event.preventDefault();\n  //   console.log(`${this.state.city}`);\n  //   // this.callAPI();\n\n  //   const response = await fetch('/', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ post: this.state.post }),\n  //   });\n  //   const body = await response.text();\n    \n  //   this.setState({ responseToPost: body });\n\n    // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n    //   .then(response => response.json())\n    //   .then(state => this.setState(state));\n\n    // const response = await fetch('api/weather', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({post: this.state.weather\n    //   });\n    //   const body = await response.text();\n\n    // })\n    // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter city: </label>\n            <input\n              id=\"city\"\n              type=\"text\"\n              value={this.state.city}\n              onChange={this.handleChange}\n            />\n            <div>\n              <input \n                type=\"radio\" \n                name=\"units\" \n                value=\"celcius\" \n                id=\"celcius\"  \n              />\n              <label \n                htmlFor=\"celcius\">Celcius\n              </label>\n              <input \n                type=\"radio\" \n                name=\"units\" \n                value=\"fahrenheit\" \n                id=\"fahrenheit\" \n              />\n              <label \n                htmlFor=\"fahrenheit\">Fahrenheit\n              </label>\n            </div>\n            \n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>Temperature for {this.state.city} is {this.state.temperature}&#176;{this.state.symbol}\n          </p>\n\n          <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}