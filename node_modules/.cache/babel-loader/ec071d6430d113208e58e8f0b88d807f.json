{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = () => {\n      fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.state.city, \"&units=\").concat(this.state.units, \"&APPID=d5566182730361aa1c00849d2f86bb95\")).then(result => console.log(result.json())).then(result => {\n        this.setState({\n          temperature: result.main.temp\n        });\n        console.log(result.main.temp);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.callAPI();\n    };\n\n    this.state = {\n      city: 'london',\n      units: 'metric',\n      temperature: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {// this.callAPI();\n  }\n\n  handleChange(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Enter city: \"), React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"celcius\",\n      id: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"fahrenheit\",\n      id: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.temperature));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js"],"names":["React","Component","App","constructor","props","callAPI","fetch","state","city","units","then","result","console","log","json","setState","temperature","main","temp","catch","err","handleSubmit","e","preventDefault","handleChange","bind","componentDidMount","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            city: 'london',\n            units: 'metric',\n            temperature: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        // this.callAPI();\n    }\n\n    callAPI = () => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=${this.state.units}&APPID=d5566182730361aa1c00849d2f86bb95`)\n        .then(result => console.log(result.json()))\n        .then((result) => {\n            this.setState({ temperature: result.main.temp })\n            console.log(result.main.temp)\n        })\n        .catch(err => { console.log(err)} )\n    }\n\n    handleChange(e) {\n        this.setState({ \n          city: e.target.value \n        });\n    }\n\n    handleSubmit = (e) =>  {\n        e.preventDefault();\n        this.callAPI();\n    }\n\n    render () {\n        return (\n            <div className=\"App\">\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"name\">Enter city: </label>\n                    <input\n                    id=\"city\"\n                    type=\"text\"\n                    value={this.state.city}\n                    onChange={this.handleChange}\n                    />\n                    <div>\n                    <input \n                        type=\"radio\" \n                        name=\"units\" \n                        value=\"celcius\" \n                        id=\"celcius\"  \n                    />\n                    <label \n                        htmlFor=\"celcius\">Celcius\n                    </label>\n                    <input \n                        type=\"radio\" \n                        name=\"units\" \n                        value=\"fahrenheit\" \n                        id=\"fahrenheit\" \n                    />\n                    <label \n                        htmlFor=\"fahrenheit\">Fahrenheit\n                    </label>\n                    </div>\n                    \n                    <button type=\"submit\">Submit</button>\n                </form>\n                <p>{this.state.temperature}</p>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}