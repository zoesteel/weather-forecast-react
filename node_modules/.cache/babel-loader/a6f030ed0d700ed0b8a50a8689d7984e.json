{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      weather: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {// this.callAPI()\n  }\n\n  callAPI() {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.state.city, \"&units=\").concat(this.state.units, \"&APPID=d5566182730361aa1c00849d2f86bb95\")).then(response => response.json()).then(response => JSON.stringify(response.main.temp)).then(response => this.setState({\n      temperature: response\n    })).catch(err => console.log(err));\n  } // callAPI = async () => {\n  //   const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=london&APPID=d5566182730361aa1c00849d2f86bb95');\n  //   const body = await response.json();\n  //   if(response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n\n\n  handleChange(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"\".concat(this.state.city));\n    this.callAPI();\n    console.log(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.state.city, \"&units=\").concat(this.state.units, \"&APPID=d5566182730361aa1c00849d2f86bb95\")); // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n    //   .then(response => response.json())\n    //   .then(state => this.setState(state));\n    // const response = await fetch('api/weather', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({post: this.state.weather\n    //   });\n    //   const body = await response.text();\n\n    this.setState({\n      city: event.target.value\n    }); // })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Enter city: \"), React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"celcius\",\n      id: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"fahrenheit\",\n      id: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Temperature for \", this.state.city, \" is \", this.state.temperature, \"\\xB0\", this.state.symbol)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/src/App.js"],"names":["React","Component","App","constructor","props","state","city","weather","temperature","units","symbol","handleChange","bind","handleSubmit","componentDidMount","callAPI","fetch","then","response","json","JSON","stringify","main","temp","setState","catch","err","console","log","event","target","value","preventDefault","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      weather: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    // this.callAPI()\n  }\n\n  callAPI() {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=${this.state.units}&APPID=d5566182730361aa1c00849d2f86bb95`)\n        .then(response => response.json()) \n        .then(response => JSON.stringify(response.main.temp))\n        .then(response => this.setState({ temperature: response }))\n        .catch(err => console.log(err))\n  }\n\n  // callAPI = async () => {\n  //   const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=london&APPID=d5566182730361aa1c00849d2f86bb95');\n  //   const body = await response.json();\n  //   if(response.status !== 200) throw Error(body.message);\n\n  //   return body;\n  // };\n  \n  handleChange(event) {\n    this.setState({ \n      city: event.target.value \n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(`${this.state.city}`);\n    this.callAPI();\n    console.log(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=${this.state.units}&APPID=d5566182730361aa1c00849d2f86bb95`)\n    // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n    //   .then(response => response.json())\n    //   .then(state => this.setState(state));\n\n    // const response = await fetch('api/weather', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({post: this.state.weather\n    //   });\n    //   const body = await response.text();\n\n      this.setState({\n        city: event.target.value\n      });\n    // })\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter city: </label>\n            <input\n              id=\"city\"\n              type=\"text\"\n              value={this.state.city}\n              onChange={this.handleChange}\n            />\n            <div>\n              <input \n                type=\"radio\" \n                name=\"units\" \n                value=\"celcius\" \n                id=\"celcius\"  \n              />\n              <label \n                htmlFor=\"celcius\">Celcius\n              </label>\n              <input \n                type=\"radio\" \n                name=\"units\" \n                value=\"fahrenheit\" \n                id=\"fahrenheit\" \n              />\n              <label \n                htmlFor=\"fahrenheit\">Fahrenheit\n              </label>\n            </div>\n            \n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>Temperature for {this.state.city} is {this.state.temperature}&#176;{this.state.symbol}</p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}