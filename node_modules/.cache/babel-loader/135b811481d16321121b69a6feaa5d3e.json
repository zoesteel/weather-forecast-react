{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // this.callAPI();\n\n      const response = await fetch('/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body,\n        city: event.state.value\n      }); // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n      //   .then(response => response.json())\n      //   .then(state => this.setState(state));\n      // const response = await fetch('api/weather', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: JSON.stringify({post: this.state.weather\n      //   });\n      //   const body = await response.text();\n      // })\n    };\n\n    this.state = {\n      city: '',\n      weather: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      responseToPost: '',\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {} // this.callAPI()\n  // callAPI() {\n  // //   fetch('localhost:3001/')\n  //       const city = this.state.city;\n  //       const api_key = process.env.API_KEY;\n  //       const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=d5566182730361aa1c00849d2f86bb95`\n  //       fetch(url)\n  //       .then(response => console.log(response))\n  //       .then(response => response.json()) \n  //       // .then(response => JSON.stringify(response))\n  //       .then(response => JSON.stringify(response.main.temp))\n  //       .then(response => this.setState({ temperature: response }))\n  //       .catch(err => console.log(err))\n  // }\n  // callAPI = async () => {\n  //   const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=d5566182730361aa1c00849d2f86bb95`);\n  //   const body = await response.json();\n  //   if(response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Enter city: \"), React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"celcius\",\n      id: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"fahrenheit\",\n      id: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Temperature for \", this.state.city, \" is \", this.state.temperature, \"\\xB0\", this.state.symbol)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/src/App.js"],"names":["React","Component","App","constructor","props","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","post","state","text","setState","responseToPost","city","value","weather","temperature","units","symbol","handleChange","bind","componentDidMount","target","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      weather: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      responseToPost: '',\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    // this.callAPI()\n  }\n\n  // callAPI() {\n  // //   fetch('localhost:3001/')\n  //       const city = this.state.city;\n  //       const api_key = process.env.API_KEY;\n  //       const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=d5566182730361aa1c00849d2f86bb95`\n  //       fetch(url)\n\n  //       .then(response => console.log(response))\n  //       .then(response => response.json()) \n        \n  //       // .then(response => JSON.stringify(response))\n  //       .then(response => JSON.stringify(response.main.temp))\n  //       .then(response => this.setState({ temperature: response }))\n  //       .catch(err => console.log(err))\n  // }\n\n  // callAPI = async () => {\n  //   const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=d5566182730361aa1c00849d2f86bb95`);\n  //   const body = await response.json();\n  //   if(response.status !== 200) throw Error(body.message);\n\n  //   return body;\n  // };\n  \n  handleChange(event) {\n    this.setState({ \n      value: event.target.value \n    });\n  }\n\n  handleSubmit = async event =>  {\n    event.preventDefault();\n    // this.callAPI();\n\n    const response = await fetch('/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ \n      responseToPost: body,\n      city:  event.state.value\n    });\n\n    // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n    //   .then(response => response.json())\n    //   .then(state => this.setState(state));\n\n    // const response = await fetch('api/weather', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({post: this.state.weather\n    //   });\n    //   const body = await response.text();\n\n    // })\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter city: </label>\n            <input\n              id=\"city\"\n              type=\"text\"\n              value={this.state.city}\n              onChange={this.handleChange}\n            />\n            <div>\n              <input \n                type=\"radio\" \n                name=\"units\" \n                value=\"celcius\" \n                id=\"celcius\"  \n              />\n              <label \n                htmlFor=\"celcius\">Celcius\n              </label>\n              <input \n                type=\"radio\" \n                name=\"units\" \n                value=\"fahrenheit\" \n                id=\"fahrenheit\" \n              />\n              <label \n                htmlFor=\"fahrenheit\">Fahrenheit\n              </label>\n            </div>\n            \n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>Temperature for {this.state.city} is {this.state.temperature}&#176;{this.state.symbol}\n          </p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}