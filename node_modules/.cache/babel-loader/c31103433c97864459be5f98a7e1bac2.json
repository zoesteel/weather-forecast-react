{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = () => {\n      // fetch(\"https://api.openweathermap.org/data/2.5/weather?q=london&APPID=d5566182730361aa1c00849d2f86bb95\")\n      //   .then(res => res.text())\n      //   .then(res => this.setState({ weather: res.express }))\n      //   .catch(err => console.log(err));\n      fetch(\"http://localhost:3000\").then(res => res.text()).then(res => this.setState({\n        apiResponse: res\n      }));\n    };\n\n    this.state = {\n      city: '',\n      weather: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.callAPI();\n  } // callApi = async () => {\n  //   const response = await fetch('/api/city');\n  //   const body = await response.json();\n  //   if(response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n\n\n  handleChange(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"\".concat(this.state.city)); // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n    //   .then(response => response.json())\n    //   .then(state => this.setState(state));\n    // const response = await fetch('api/weather', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({post: this.state.weather\n    //   });\n    //   const body = await response.text();\n    //   this.setState({\n    //     responseToPost: body\n    //   });\n    // })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Enter city: \"), React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.weather)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/src/App.js"],"names":["React","Component","App","constructor","props","callAPI","fetch","then","res","text","setState","apiResponse","state","city","weather","handleChange","bind","handleSubmit","componentDidMount","event","target","value","preventDefault","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,OAVmB,GAUT,MAAM;AACd;AACA;AACA;AACA;AACAC,MAAAA,KAAK,CAAC,uBAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI,KAAKE,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEH;AAAf,OAAd,CAFjB;AAGD,KAlBkB;;AAEjB,SAAKI,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAYDE,EAAAA,iBAAiB,GAAE;AACjB,SAAKb,OAAL;AACD,GAvByB,CAyB1B;AACA;AACA;AACA;AAEA;AACA;;;AAEAU,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAClB,SAAKT,QAAL,CAAc;AACZG,MAAAA,IAAI,EAAEM,KAAK,CAACC,MAAN,CAAaC;AADP,KAAd;AAGD;;AAEDJ,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACG,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,WAAe,KAAKZ,KAAL,CAAWC,IAA1B,GAFkB,CAGlB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACC;;AAEHY,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKR,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKE,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKH,KAAL,CAAWE,OAAf,CAXF,CADF,CADF;AAiBD;;AA/EyB;;AAkF5B,eAAeZ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      weather: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  callAPI = () => {\n    // fetch(\"https://api.openweathermap.org/data/2.5/weather?q=london&APPID=d5566182730361aa1c00849d2f86bb95\")\n    //   .then(res => res.text())\n    //   .then(res => this.setState({ weather: res.express }))\n    //   .catch(err => console.log(err));\n    fetch(\"http://localhost:3000\")\n        .then(res => res.text())\n        .then(res => this.setState({ apiResponse: res }));\n  }\n\n  componentDidMount(){\n    this.callAPI()\n  }\n\n  // callApi = async () => {\n  //   const response = await fetch('/api/city');\n  //   const body = await response.json();\n  //   if(response.status !== 200) throw Error(body.message);\n\n  //   return body;\n  // };\n  \n  handleChange(event) {\n    this.setState({ \n      city: event.target.value \n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(`${this.state.city}`);\n    // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n    //   .then(response => response.json())\n    //   .then(state => this.setState(state));\n\n    // const response = await fetch('api/weather', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({post: this.state.weather\n    //   });\n    //   const body = await response.text();\n\n    //   this.setState({\n    //     responseToPost: body\n    //   });\n    // })\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter city: </label>\n            <input\n              id=\"city\"\n              type=\"text\"\n              value={this.state.city}\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>{this.state.weather}</p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}