{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport SunIcon from './images/sun.png';\nimport CitySearch from './CitySearch';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/weather');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/weather', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post,\n          units: this.state.units\n        })\n      });\n      const body = await response.json();\n      this.setState({\n        responseToPost: body,\n        city: body.city,\n        temperature: body.temperature,\n        description: body.description,\n        message: \"The temperature in \".concat(body.city, \" is \").concat(body.temperature, \"\\xB0\").concat(body.symbol)\n      });\n    };\n\n    this.handleUnitChange = e => {\n      this.setState({\n        units: e.target.value,\n        symbol: e.target.id\n      });\n    };\n\n    this.state = {\n      city: '',\n      temperature: '',\n      units: 'metric',\n      symbol: '',\n      description: '',\n      message: '',\n      error: undefined,\n      post: '' // this.handleSearch = this.handleSearch.bind(this);\n\n    };\n  } // handleSearch(city, temperature, units, symbol, description, error) {\n  //     this.setState({\n  //         city: city,\n  //         temperature: temperature,\n  //         units: units,\n  //         symbol: symbol,\n  //         description: description,\n  //         error: error,\n  //         message: `The temperature in ${city} is ${temperature}Â°${symbol}`,\n  //     });\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: SunIcon,\n      alt: \"sun icon\",\n      className: \"sun\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Check the weather\"), React.createElement(CitySearch, {\n      onSearchComplete: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), this.state.error !== undefined && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.response), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onChange: this.handleUnitChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"metric\",\n      id: \"C\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"imperial\",\n      id: \"F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.message))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js"],"names":["React","Component","SunIcon","CitySearch","App","constructor","props","callApi","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","post","state","units","setState","responseToPost","city","temperature","description","symbol","handleUnitChange","target","value","id","error","undefined","render","handleSearch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.scss';\nimport SunIcon from './images/sun.png';\nimport CitySearch from './CitySearch';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            city: '',\n            temperature: '',\n            units: 'metric',\n            symbol: '',\n            description: '',\n            message: '',\n            error: undefined,\n            post: ''\n        }        \n        // this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    // handleSearch(city, temperature, units, symbol, description, error) {\n    //     this.setState({\n    //         city: city,\n    //         temperature: temperature,\n    //         units: units,\n    //         symbol: symbol,\n    //         description: description,\n    //         error: error,\n    //         message: `The temperature in ${city} is ${temperature}Â°${symbol}`,\n    //     });\n    // }\n      \n    callApi = async () => {\n        const response = await fetch('/weather');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        \n        return body;\n    };\n      \n    handleSubmit = async e => {\n        e.preventDefault();\n        const response = await fetch('/weather', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \n                post: this.state.post,\n                units: this.state.units\n            }),\n        });\n       \n        const body = await response.json();\n        this.setState({ \n            responseToPost: body,\n            city: body.city,\n            temperature: body.temperature,\n            description: body.description,\n            message: `The temperature in ${body.city} is ${body.temperature}Â°${body.symbol}`,\n         });\n    };\n\n    // handles change in radio buttons for imperial or metric\n    handleUnitChange = (e) => {\n        this.setState({\n            units: e.target.value,\n            symbol: e.target.id,\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={SunIcon} alt=\"sun icon\" className=\"sun\" />\n                    <h1 className=\"title\">Check the weather</h1>\n                    \n                    {/* the input form  */}\n                    <CitySearch \n                        onSearchComplete={this.handleSearch}\n                    />\n\n                    {/* if no error message exists then display the weather message */}\n                    {/* { this.state.error === undefined &&\n                        <div>\n                            <h2>{this.state.description}</h2>                    \n                            <p>{this.state.message}</p>     \n                        </div>\n                    } */}\n\n                    {/* if error exists then display it */}\n                    { this.state.error !== undefined && \n                         <p>{this.state.error}</p>\n                    }\n\n                    <p>{this.state.response}</p>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <input\n                            type=\"text\"\n                            value={this.state.post}\n                            onChange={e => this.setState({ \n                                post: e.target.value \n                            })}\n                        />\n                        \n\n                        <div onChange={this.handleUnitChange}>\n                            <input \n                                type=\"radio\" \n                                name=\"units\" \n                                value=\"metric\" \n                                id=\"C\"\n                                defaultChecked\n                            />\n                            <label \n                                htmlFor=\"celcius\">Celcius\n                            </label>\n                            <input \n                                type=\"radio\" \n                                name=\"units\" \n                                value=\"imperial\" \n                                id=\"F\" \n                            />\n                            <label \n                                htmlFor=\"fahrenheit\">Fahrenheit\n                            </label>\n                            \n                        </div>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n\n                    <div>\n                        <h2>{this.state.description}</h2>                    \n                        <p>{this.state.message}</p>     \n                    </div>\n\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}