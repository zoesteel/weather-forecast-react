{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = async () => {\n      const response = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.state.city, \"&APPID=d5566182730361aa1c00849d2f86bb95\"));\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      console.log(\"\".concat(this.state.city)); // this.callAPI();\n\n      const response = await fetch('/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      }); // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n      //   .then(response => response.json())\n      //   .then(state => this.setState(state));\n      // const response = await fetch('api/weather', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: JSON.stringify({post: this.state.weather\n      //   });\n      //   const body = await response.text();\n      // })\n    };\n\n    this.state = {\n      city: '',\n      weather: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      responseToPost: '',\n      value: '',\n      response: '',\n      post: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {} // this.callAPI()\n  // callAPI() {\n  // //   fetch('localhost:3001/')\n  //       const city = this.state.city;\n  //       const api_key = process.env.API_KEY;\n  //       const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=d5566182730361aa1c00849d2f86bb95`\n  //       fetch(url)\n  //       .then(response => console.log(response))\n  //       .then(response => response.json()) \n  //       // .then(response => JSON.stringify(response))\n  //       .then(response => JSON.stringify(response.main.temp))\n  //       .then(response => this.setState({ temperature: response }))\n  //       .catch(err => console.log(err))\n  // }\n\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Enter city: \"), React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"celcius\",\n      id: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"fahrenheit\",\n      id: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Temperature for \", this.state.city, \" is \", this.state.temperature, \"\\xB0\", this.state.symbol), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.response), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Post to Server:\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.state.responseToPost)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js"],"names":["React","Component","App","constructor","props","callAPI","response","fetch","state","city","body","json","status","Error","message","handleSubmit","event","preventDefault","console","log","method","headers","JSON","stringify","post","text","setState","responseToPost","weather","temperature","units","symbol","value","handleChange","bind","componentDidMount","target","render","e"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      weather: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      responseToPost: '',\n      value: '',\n      response: '',\n      post: '',\n    \n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    // this.callAPI()\n  }\n\n  // callAPI() {\n  // //   fetch('localhost:3001/')\n  //       const city = this.state.city;\n  //       const api_key = process.env.API_KEY;\n  //       const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=d5566182730361aa1c00849d2f86bb95`\n  //       fetch(url)\n\n  //       .then(response => console.log(response))\n  //       .then(response => response.json()) \n        \n  //       // .then(response => JSON.stringify(response))\n  //       .then(response => JSON.stringify(response.main.temp))\n  //       .then(response => this.setState({ temperature: response }))\n  //       .catch(err => console.log(err))\n  // }\n\n  callAPI = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=d5566182730361aa1c00849d2f86bb95`);\n    const body = await response.json();\n    if(response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n  \n  handleChange(event) {\n    this.setState({ \n      value: event.target.value \n    });\n  }\n\n  handleSubmit = async event =>  {\n    event.preventDefault();\n    console.log(`${this.state.city}`);\n    // this.callAPI();\n\n    const response = await fetch('/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n\n    // fetch(`/city?city=${encodeURIComponent(this.state.city)}`)\n    //   .then(response => response.json())\n    //   .then(state => this.setState(state));\n\n    // const response = await fetch('api/weather', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({post: this.state.weather\n    //   });\n    //   const body = await response.text();\n\n    // })\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter city: </label>\n            <input\n              id=\"city\"\n              type=\"text\"\n              value={this.state.city}\n              onChange={this.handleChange}\n            />\n            <div>\n              <input \n                type=\"radio\" \n                name=\"units\" \n                value=\"celcius\" \n                id=\"celcius\"  \n              />\n              <label \n                htmlFor=\"celcius\">Celcius\n              </label>\n              <input \n                type=\"radio\" \n                name=\"units\" \n                value=\"fahrenheit\" \n                id=\"fahrenheit\" \n              />\n              <label \n                htmlFor=\"fahrenheit\">Fahrenheit\n              </label>\n            </div>\n            \n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>Temperature for {this.state.city} is {this.state.temperature}&#176;{this.state.symbol}\n          </p>\n\n          <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}